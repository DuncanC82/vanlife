[{"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\index.tsx":"1","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\stores\\store.ts":"3","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\layout\\App.tsx":"4","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\stores\\activityStore.ts":"5","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\layout\\NavBar.tsx":"6","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\home\\HomePage.tsx":"7","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivitiesDashboard.tsx":"9","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"10","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\api\\agent.ts":"11","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\layout\\LoadingComponents.tsx":"12","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"13","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"14","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"15","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"16","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"17","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"18","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"19"},{"size":1022,"mtime":1666976941644,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":355,"mtime":1664694126450,"results":"23","hashOfConfig":"21"},{"size":1887,"mtime":1666976941640,"results":"24","hashOfConfig":"21"},{"size":5380,"mtime":1666976941641,"results":"25","hashOfConfig":"21"},{"size":1031,"mtime":1666976941641,"results":"26","hashOfConfig":"21"},{"size":664,"mtime":1666940262489,"results":"27","hashOfConfig":"21"},{"size":3337,"mtime":1666976941644,"results":"28","hashOfConfig":"21"},{"size":1754,"mtime":1666976941642,"results":"29","hashOfConfig":"21"},{"size":2951,"mtime":1666976941643,"results":"30","hashOfConfig":"21"},{"size":1398,"mtime":1664989279474,"results":"31","hashOfConfig":"21"},{"size":384,"mtime":1664480108889,"results":"32","hashOfConfig":"21"},{"size":3164,"mtime":1666976941643,"results":"33","hashOfConfig":"21"},{"size":581,"mtime":1666909459648,"results":"34","hashOfConfig":"21"},{"size":2411,"mtime":1666718958498,"results":"35","hashOfConfig":"21"},{"size":1911,"mtime":1666717869464,"results":"36","hashOfConfig":"21"},{"size":1657,"mtime":1666718912950,"results":"37","hashOfConfig":"21"},{"size":2436,"mtime":1666719008323,"results":"38","hashOfConfig":"21"},{"size":1156,"mtime":1666976772618,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tt1s1d",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\index.tsx",["82"],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\reportWebVitals.ts",[],["83","84"],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\stores\\store.ts",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\layout\\NavBar.tsx",["85"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\n\r\n\r\nexport default function  NavBar() {\r\n\r\n    const {activityStore} = useStore();\r\n\r\n    return ( \r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src='/assets/logo.png' alt='logo' style={{marginRight: '10px'}}/>\r\n                    Vanlife\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name = 'Activities'/>\r\n                <Menu.Item>\r\n                    <Button as={NavLink} to='/createActivity' positive content='Create Activity'/>\r\n                </Menu.Item>\r\n            </Container>\r\n\r\n        </Menu>\r\n    )\r\n} ","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["86"],"import { observer } from 'mobx-react-lite';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\n\r\nexport default observer( function ActivityForm(){\r\n    const history = useHistory();\r\n    const {activityStore} = useStore();\r\n    const { createActivity, updateActivity, \r\n        loading, loadActivity, loadingInitial} = activityStore;\r\n    const{id} = useParams<{id: string}>();\r\n\r\n    const [activity, setActivity] = useState({  \r\n    id: '',\r\n    title: '',\r\n    category: '',\r\n    description: '',\r\n    date: '',\r\n    city: '', \r\n    venue: ''});\r\n \r\n    useEffect(() => {\r\n      if (id) loadActivity(id).then(activity => setActivity(activity!))\r\n    }, [id, loadActivity])\r\n\r\n    function handleSubmit() {\r\n       if (activity.id.length === 0) {\r\n        let newActivity = {\r\n            ...activity, id: uuid()\r\n        }\r\n        createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\r\n       } else {\r\n        updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n       }\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>){\r\n        const {name, value} = event.target;\r\n        setActivity({...activity,[name]: value})\r\n\r\n    }\r\n\r\n    if (loading) return <LoadingComponent content='loading activity...'/>\r\n    \r\n    return(\r\n<Segment clearing>\r\n\r\n<Form onSubmit={handleSubmit} autoComplete='off'>\r\n    <Form.Input placeholder='Title' value={activity.title} name='title' onChange={handleInputChange}/>\r\n    <Form.TextArea placeholder='Description'value={activity.description} name='description' onChange={handleInputChange}/>\r\n    <Form.Input placeholder='Category'value={activity.category} name='category' onChange={handleInputChange}/>\r\n    <Form.Input type='date' placeholder='Date'value={activity.date} name='date' onChange={handleInputChange}/>\r\n    <Form.Input placeholder='City'value={activity.city} name='city' onChange={handleInputChange}/>\r\n    <Form.Input placeholder='Venue'value={activity.venue} name='venue' onChange={handleInputChange}/>\r\n    <Button loading={loading} floated='right' positive type='submit' content='Submit' />\r\n    <Button as={Link} to=\"/activities\"  floated='right' type='button' content='Cancel' />\r\n</Form>\r\n\r\n</Segment>\r\n\r\n    )\r\n})","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivitiesDashboard.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\api\\agent.ts",["87"],"import axios, {AxiosError, AxiosResponse} from 'axios';\r\nimport { Activity } from '../models/activity';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.response.use(async response =>{\r\n    try {\r\n        await sleep(1000);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return await Promise.reject(error);\r\n    }\r\n})\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests ={ \r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T> (url: string) => axios.delete<T>(url).then(responseBody),\r\n    \r\n}\r\n\r\nconst Activities = {\r\n    list: () => requests.get<Activity[]>('/activities'),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: Activity) => axios.post<void>('/activities', activity), \r\n    update: (activity: Activity) => axios.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => axios.delete<void>(`/activities/${id}`),\r\n}\r\n\r\nconst agent = {\r\n    Activities\r\n}\r\n\r\nexport default agent;","C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\app\\layout\\LoadingComponents.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\Users\\dunca\\Documents\\Projects\\vanlife\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",["88","89"],{"ruleId":null,"fatal":true,"severity":2,"message":"90","line":8,"column":0},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":10,"column":12,"nodeType":"97","messageId":"98","endLine":10,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":15,"column":32,"nodeType":"97","messageId":"98","endLine":15,"endColumn":46},{"ruleId":"95","severity":1,"message":"100","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"101","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"102","line":1,"column":26,"nodeType":"97","messageId":"98","endLine":1,"endColumn":34},"Parsing error: Merge conflict marker encountered.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'activityStore' is assigned a value but never used.","Identifier","unusedVar","'loadingInitial' is assigned a value but never used.","'AxiosError' is defined but never used.","'SyntheticEvent' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]